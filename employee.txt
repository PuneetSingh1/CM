apiVersion: apps/v1
kind: Deployment
metadata:
  name: employee-webapp
  labels:
    app: myapp

spec:
  template:
    metadata:
      name: employee-pod
      labels:
        app: myapp
    spec:
      containers:
        - name: employee-cont
          image: employee-img
          imagePullPolicy: Never ###
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: employee-data
              mountPath: "/mnt/data"
      volumes:
        - name: employee-data
          persistentVolumeClaim:
            claimName: employee-data-pvc

  replicas: 1
  selector:
    matchLabels:
      app: myapp

---
apiVersion: v1
kind: Service
metadata:
  name: employee-service

spec:
  type: NodePort
  ports:
    - targetPort: 8080
      protocol: TCP
      port: 8080
      # nodePort: 32567
  selector:
    app: myapp ## from label

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: employee-ingress

spec:
  rules:
    - host: myorg.com # domain name
      http:
        paths:
          - path: /empinfo
            pathType: Prefix
            backend:
              service:
                name: employee-service # Name of Kubernetes Service
                port:
                  number: 8080 # Port where service is running

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: emppv
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/emppv/

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: employee-data-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
